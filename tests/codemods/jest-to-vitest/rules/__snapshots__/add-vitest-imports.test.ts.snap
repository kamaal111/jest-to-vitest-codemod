// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`addVitestImports > adds describe import 1`] = `
"import { describe, expect, it } from 'vitest';

describe('addVitestImports', () => {
  it('collects vitest functions and imports them', async () => {
    const source = '';

    const modifications = await invalidRuleSignal(source, JEST_TO_VITEST_LANGUAGE, ast => {
      return addVitestImports(makeJestToVitestInitialModification(ast));
    });
    const updatedSource = modifications.ast.root().text();

    expect(updatedSource).toContain('');
  });
});
    "
`;

exports[`addVitestImports > adds vitest import at the top of the program 1`] = `
"import { describe, expect, it } from 'vitest';
import { asserts } from '@kamaalio/kamaal'

describe('addVitestImports', () => {
  it('collects vitest functions and imports them', async () => {
    const source = '';

    const modifications = await invalidRuleSignal(source, JEST_TO_VITEST_LANGUAGE, ast => {
      return addVitestImports(makeJestToVitestInitialModification(ast));
    });
    const updatedSource = modifications.ast.root().text();

    expect(updatedSource).toContain('');
  });
});
    "
`;

exports[`addVitestImports > collects vitest functions and imports them 1`] = `
"import { describe, expect, it } from 'vitest';

describe('addVitestImports', () => {
  it('collects vitest functions and imports them', async () => {
    const source = '';

    const modifications = await invalidRuleSignal(source, JEST_TO_VITEST_LANGUAGE, ast => {
      return addVitestImports(makeJestToVitestInitialModification(ast));
    });
    const updatedSource = modifications.ast.root().text();

    expect(updatedSource).toContain('');
  });
});
    "
`;
